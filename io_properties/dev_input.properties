pythonVersion=Python 3 (version 3.9.5) 
pythonPackages=DecryptLogin\=\=0.2.7\nclepy\=\=0.3.23\n\nretexto\=\=1.6.1\n\n 
pythonScript=import clepy\nfrom DecryptLogin import login\nimport sys\n\n\nclass Solution\:\n    def isRobotBounded(self, instructions\: str) -> bool\:\n        \# Position is a tuple (X, Y) and directions are\:\n        \# 0 - North\n        \# 1 - East\n        \# 2 - South\n        \# 3 - West\n        position, direction \= (0, 0), 0\n\n        \# Execute all steps and compute final position\n        for instruction in instructions\:\n\n            if instruction \=\= "G"\:\n\n                \# Move forward, compute new position\n                if direction \=\= 0\:\n                    position \= (position[0], position[1] - 1)\n                elif direction \=\= 1\:\n                    position \= (position[0] + 1, position[1])\n                elif direction \=\= 2\:\n                    position \= (position[0], position[1] + 1)\n                elif direction \=\= 3\:\n                    position \= (position[0] - 1, position[1])\n\n            elif instruction \=\= "L"\:\n\n                \# Rotate left\n                direction \= (direction - 1) % 4\n\n            elif instruction \=\= "R"\:\n\n                \# Rotate right\n                direction \= (direction + 1) % 4\n\n        \# If final position is at (0, 0) without considering the direction or\n        \# the robot's position has changed along its direction, than the robot\n        \# moves in a circle plane\n        return position \=\= (0, 0) or direction \!\= 0\n\n\n\# Get algorithm input from command line arguments (if any)\nif len(sys.argv) > 1\:\n    algo_input \= sys.argv[-1]\nelse\:\n    algo_input \= "RLLGGLRGLGLLLGRLRLRLRRRRLRLGRLLLGGL"\n\n\# Execute the algorithm\nalgo_output \= Solution().isRobotBounded(algo_input)\nprint(f"Input\: {algo_input}\\nOutput\: {algo_output}")\n 
pythonArguments=LLRLLGGGLLRGLLGRLLRGLGGLRGLLLRLRLRLGRLRLRLRRRRRLGLRGLRGL

